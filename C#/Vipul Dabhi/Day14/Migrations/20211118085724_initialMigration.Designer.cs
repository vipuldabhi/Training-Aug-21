// <auto-generated />
using System;
using Day14.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Day14.Migrations
{
    [DbContext(typeof(ToyContext))]
    [Migration("20211118085724_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Day14.Models.CustomerDetails", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderDetailsOrderID")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("OrderDetailsOrderID");

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("Day14.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("OrderID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Day14.Models.PlantsDetails", b =>
                {
                    b.Property<int>("PlantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PlantAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlantID");

                    b.ToTable("PlantsDetails");
                });

            modelBuilder.Entity("Day14.Models.ToyCatageory", b =>
                {
                    b.Property<int>("CatageoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategeoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PlantsDetailsPlantID")
                        .HasColumnType("int");

                    b.HasKey("CatageoryID");

                    b.HasIndex("PlantsDetailsPlantID");

                    b.ToTable("ToyCatageory");
                });

            modelBuilder.Entity("Day14.Models.ToysDetails", b =>
                {
                    b.Property<int>("ToyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderDetailsOrderID")
                        .HasColumnType("int");

                    b.Property<int?>("PlantsDetailsPlantID")
                        .HasColumnType("int");

                    b.Property<string>("ToyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToyPrice")
                        .HasColumnType("int");

                    b.HasKey("ToyID");

                    b.HasIndex("OrderDetailsOrderID");

                    b.HasIndex("PlantsDetailsPlantID");

                    b.ToTable("ToysDetails");
                });

            modelBuilder.Entity("Day14.Models.CustomerDetails", b =>
                {
                    b.HasOne("Day14.Models.OrderDetails", null)
                        .WithMany("Customers")
                        .HasForeignKey("OrderDetailsOrderID");
                });

            modelBuilder.Entity("Day14.Models.ToyCatageory", b =>
                {
                    b.HasOne("Day14.Models.PlantsDetails", null)
                        .WithMany("Catageories")
                        .HasForeignKey("PlantsDetailsPlantID");
                });

            modelBuilder.Entity("Day14.Models.ToysDetails", b =>
                {
                    b.HasOne("Day14.Models.OrderDetails", null)
                        .WithMany("Toys")
                        .HasForeignKey("OrderDetailsOrderID");

                    b.HasOne("Day14.Models.PlantsDetails", null)
                        .WithMany("Toys")
                        .HasForeignKey("PlantsDetailsPlantID");
                });

            modelBuilder.Entity("Day14.Models.OrderDetails", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Toys");
                });

            modelBuilder.Entity("Day14.Models.PlantsDetails", b =>
                {
                    b.Navigation("Catageories");

                    b.Navigation("Toys");
                });
#pragma warning restore 612, 618
        }
    }
}
